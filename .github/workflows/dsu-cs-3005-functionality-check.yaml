name: dsu-cs-3005-functionality-check
on: [push]
jobs:

##########################################################################

  pull-code:
    name: Pull source code
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        
##########################################################################

  hello-enabled:
    name: Hello enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: hello
      ASSIGNMENT: hello
    steps:
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  hello-check:
    name: Build and run hello, if enabled
    runs-on: self-hosted
    needs: [hello-enabled]
    continue-on-error: false
    if: ${{ needs.hello-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: hello
      ASSIGNMENT: hello
    steps:
      - run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd grade-text --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose
        
##########################################################################

  questions-3-enabled:
    name: Questions 3 enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: questions_3
      ASSIGNMENT: questions_3
    steps:
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  questions-3-check:
    name: Build and test questions_3, if enabled
    runs-on: self-hosted
    needs: [questions-3-enabled]
    continue-on-error: false
    if: ${{ needs.questions-3-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: questions_3
      ASSIGNMENT: questions_3
      ASSIGNMENT_NUMBER: 1
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
      - run: grade_manager --cmd grade-text --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose
        
##########################################################################

  ascii-image-enabled:
    name: ASCII Image enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: ascii_image
      ASSIGNMENT: ascii_image
    steps:
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  ascii-image-check:
    name: Build and run ascii_image, if enabled
    runs-on: self-hosted
    needs: [ascii-image-enabled]
    continue-on-error: false
    if: ${{ needs.ascii-image-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: ascii_image
      ASSIGNMENT: ascii_image
      ASSIGNMENT_NUMBER: 2
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
      - run: grade_manager --cmd grade-text --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose

##########################################################################        
        
  image-file-enabled:
    name: Image File enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: image_file
      ASSIGNMENT: image_file
    steps:
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  image-file-check:
    name: Build and run image_file, if enabled
    runs-on: self-hosted
    needs: [image-file-enabled]
    continue-on-error: false
    if: ${{ needs.image-file-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: image_file
      ASSIGNMENT: image_file
      ASSIGNMENT_NUMBER: 3
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
      - run: grade_manager --cmd grade-ppm --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose
        
##########################################################################        
        
  inquisitor-enabled:
    name: Inquisitor enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: inquisitor
      ASSIGNMENT: inquisitor
    steps:
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  inquisitor-check:
    name: Build and run inquisitor, if enabled
    runs-on: self-hosted
    needs: [inquisitor-enabled]
    continue-on-error: false
    if: ${{ needs.inquisitor-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: inquisitor
      ASSIGNMENT: inquisitor
      ASSIGNMENT_NUMBER: 2102
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
      - run: grade_manager --cmd grade-text --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose
        
##########################################################################        
        
  simple-squares-ascii-enabled:
    name: Simple Squares ASCII enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: simple_squares_ascii
      ASSIGNMENT: simple_squares_ascii
    steps:
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  simple-squares-ascii-check:
    name: Build and run simple squares ascii, if enabled
    runs-on: self-hosted
    needs: [simple-squares-ascii-enabled]
    continue-on-error: false
    if: ${{ needs.simple-squares-ascii-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: simple_squares_ascii
      ASSIGNMENT: simple_squares_ascii
      ASSIGNMENT_NUMBER: 2115
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
      - run: grade_manager --cmd grade-text --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose
        
##########################################################################        
        
  four-square-enabled:
    name: Four square enabled?
    runs-on: self-hosted
    needs: [pull-code]
    continue-on-error: true
    outputs:
      output1: ${{ steps.step1.outcome }}
    env:
      PROGRAM: four_square
      ASSIGNMENT: four_square
    steps:
      - name: Enabled?
        id: step1
        run: grade_manager --cmd enabled --programs ${{ env.ASSIGNMENT }} --verbose
        
  four-square-check:
    name: Build and run four square, if enabled
    runs-on: self-hosted
    needs: [four-square-enabled]
    continue-on-error: false
    if: ${{ needs.four-square-enabled.outputs.output1 == 'success' }}
    env:
      PROGRAM: four_square
      ASSIGNMENT: four_square
      ASSIGNMENT_NUMBER: 2105
    steps:
      - run: grade_manager --cmd make --programs ${{ env.PROGRAM }} --verbose
      - run: grade_manager --cmd unit-test --unit-test-working-directory ${{ github.repository }} --unit-test-assignment-number ${{ env.ASSIGNMENT_NUMBER }} --verbose
      - run: grade_manager --cmd grade-text --programs ${{ env.PROGRAM }} --acceptance-tests-location ${{ env.ASSIGNMENT }}/acceptance_tests --verbose
        
##########################################################################        
